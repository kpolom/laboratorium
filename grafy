#include <stdio.h>
#include <stdlib.h>

int main() {

  int i = 0;
  int j = 0;
  int y = 0;
  int u = 0;
  int max = 0;
  int suma, N, M ,O, x, w;

  printf("Podaj liczbe wierzcholkow grafu:");
  scanf("%d", &N);
M = N;
int tab[N][M];
for (y=0; y<N; y++) {
    for (u=0; u<M; u++) {
        tab[y][u] = -1;
    }
}
while (i<=N) {
  while (j<=M) {
    if (j == i) {
        tab[i][j]=0;
        j=j+1;
            if(j > M) {
                i=i+1;
                j=0;
            }
        }
      if (tab[i][j] == -1) {
            printf("Czy wierzcholek %d jest polaczony z wierzcholkiem %d: (1-tak, 0-nie)\n", i+1 , j+1);
            scanf("%d", &x);
          if ((x != 0) && (x != 1)) {
            printf("Mozesz wpisac: 1-tak lub 0-nie.\nCzy wierzcholek %d jest polaczony z wierzcholkiem %d: (1-tak, 0-nie)\n", i+1 , j+1);
            scanf("%d", &x);
          }
          if (x == 1) {
            tab[i][j] = 1;
            tab[j][i] = 1;
              j=j+1;
                    }
          else if (x == 0) {
            tab[i][j] = 0;
            tab[j][i] = 0;
              j=j+1;
                    }
         if (j >= M) {
            i=i+1;
            j=0;
                    }
            }
      else  {
            if (j < M) {
              j=j+1;
                    }
            else if(i <= N) {
              i=i+1;
              j=0;
                    }
            else  {
              j = M+1;
                    }
            }
        }
    }
       printf("\n");
for (i=0; i<N; i++) {
    for (j=0; j<M; j++)
        printf("%3d",tab[i][j]);
        printf("\n");
            }
      printf("\n");
 for (j=0; j<M; j++) {
    suma = 0;
        for (i=0; i<N; i++)
            suma = suma + tab[j][i];
            printf("Stopien wierzcholka %d = %d\n",j+1,suma);
            if (max <= suma){
                max = suma;
                    }
                }
    printf(" \nStopien grafu: %d\n",max);
    j=0;
    i=0;
    x=0;

    while (x<N) {
        i=i+1;
        if (tab[i][j] == 0) {
            x=x+1;
            }
        else if (tab[i][j] == 1) {
            x=N;
            }
        }

    x=0;
    y=0;
    while (y<999) {
    if (i == 0) {
        y=9999;
        }
    else if (tab[i][j] == 1) {
        tab[i][j] = 0;
        tab[j][i] = 0;
        j=i;
        i=0;
    printf("i: %d  j: %d \n", i, j);
            while (x<999) {
                if (tab[i][j] == 0) {
                    x=x+1;
                    i=i+1;
                    }
                else if (tab[i][j] == 1) {
                    x=9999;
                }
            }
        }
    }
for (i=0; i<N; i++) {
    for (j=0; j<M; j++)
        printf("%3d",tab[i][j]);
        printf("\n");
            }

 return 0;
}

///////


#include <iostream>
#include <stack>
#include <vector>
using namespace std;

bool visited[10000];
vector <int> V[10000];


int main()
{
    int t,euler,n,m,i,v1,v2;
    int w=0;
    bool spojny;
    stack<int>S;

    cout << "Wprowadz ilosc wierzcholkow i krawedzi po spacji.\n";
    cin >> n >> m;
    int tab[n];
    int tab2[n];
    for(i = 0; i < n; i++) {
    cout << "Podaj ilosc krawedzi wierzcholka " << w << ": ";
    w=w+1;
    cin >> tab[i];
    }
    cout << "Podaj wierzcholek oraz wierzcholek polaczony z nim po spacji.\n";
    for(i = 0; i < m; i++)
    {
        cin >> v1 >> v2;
        V[v1].push_back(v2);
        V[v2].push_back(v1);
    }
    for(i = 0; i < n; i++)
    {
        cout<<"\n"<<i<<" jest poloczony z: ";
        for(int j = 0 ; j < V[i].size() ; j++)
            cout << V[i][j]<<", ";
    }

    cout << "\n";
//  DFS
    S.push(0);
    while(!S.empty())
    {
        v1 = S.top();
        S.pop();
        if(!visited[v1])
        {
            visited[v1] = true;
            for(int i=0 ; i < V[v1].size() ; i++)
                if(!visited[V[v1][i]])
                {
                    S.push(V[v1][i]);
                }
        }
    }
    cout << "\n1-odwiedzony / 0-nie dalo sie odwiedzic\n";
    for(i = 0; i < n; i++)
        cout<<visited[i]<<", ";

    spojny = true;
    for(i = 0; i < n; i++)
        if(!visited[i])
        {
            spojny = false;
            break;
        }
    cout << endl;
    if(spojny) cout << "\nGraf spojny.\n";
    else cout << "\nGraf niespojny.\n";
    //euler
    if(m % 2 == 0){
        euler=1;
    }
    else if(m % 2 == 1){
        euler=0;
    }
    if((spojny) && (euler == 1)){
        cout << "\nGraf eulerowski.\n";
    }
    else{
        cout << "\nGraf nie jest eulerowski.\n";
    }
    t=tab[0];
    for(i = 0; i < n; i++) {
        if(tab[i]>t){
            t=tab[i];
        }
        else if(tab[i]<t) {
            i++;
        }
    }
        cout << "\nStopien grafu: " << t << "\n";
}
